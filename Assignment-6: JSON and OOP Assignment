Task 1: Creating Employee Objects from JSON File
[
    {
        "Name": "shivam",
        "DOB": "1990-05-15",
        "Height": 175,
        "City": "delhi",
        "State": "delhi"
    },
    {
        "Name": "rahul",
        "DOB": "1988-12-03",
        "Height": 162,
        "City": "pune",
        "State": "Mharashtra"
    },
    {
        "Name": "kriti",
        "DOB": "1995-08-21",
        "Height": 183,
        "City": "goa",
        "State": "goa"
    },
    {
        "Name": "nitika",
        "DOB": "1992-03-10",
        "Height": 170,
        "City": "meerut",
        "State": "uttar pradesh"
    },
    {
        "Name": "kashish",
        "DOB": "1987-09-28",
        "Height": 178,
        "City": "noida",
        "State": "uttar pradesh"
    }
]

import json

class Employee:
    def __init__(self, name, dob, height, city, state):
        self.name = name
        self.dob = dob
        self.height = height
        self.city = city
        self.state = state

# Read data from JSON file
with open('employee.json', 'r') as json_file:
    employee_data = json.load(json_file)

# Create Employee objects and store in a list
employees = []
for emp in employee_data:
    employees.append(Employee(emp["Name"], emp["DOB"], emp["Height"], emp["City"], emp["State"]))

# Print the list of Employee objects
for emp in employees:
    print(vars(emp))

Task 2: Creating JSON File for Indian States and Capitals

# Dictionary of Indian states and capitals
indian_states = {
    "Andhra Pradesh": "Amaravati",
    "Maharashtra": "Mumbai",
    "Karnataka": "Bengaluru",
    "Tamil Nadu": "Chennai",
    "Uttar Pradesh": "Lucknow",
    "Punjab": "Chandigarh",
    "Rajasthan": "Jaipur"
}

# Write data to JSON file
with open('indian_states.json', 'w') as json_file:
    json.dump(indian_states, json_file, indent=4)

. Create a class named ‘Dog’. It should have a constructor which accepts its name, age and coat color. You must perform the following operations:
class Dog:

    def __init__(self, name, age, coat_color):
        self.name = name
        self.age = age
        self.coat_color = coat_color

    def description(self):
        print(f"{self.name} is {self.age} years old.")

    def get_info(self):
        print(f"{self.name}'s coat color is {self.coat_color}.")


class Chihuahua(Dog):
    def __init__(self, name, age, coat_color, size):
        super().__init__(name, age, coat_color)
        self.size = size

    def bark(self):
        print(f"{self.name} the Chihuahua says: Woof, woof!")

    def play_fetch(self):
        print(f"{self.name} loves to play fetch with tiny toys.")


class Terrier(Dog):
    def __init__(self, name, age, coat_color, energy_level):
        super().__init__(name, age, coat_color)
        self.energy_level = energy_level

    def dig_holes(self):
        print(f"{self.name} the Terrier is digging a hole in the yard.")

    def agility_training(self):
        print(f"{self.name} enjoys agility training to burn off energy.")


class Bulldog(Dog):
    def __init__(self, name, age, coat_color, drool_level):
        super().__init__(name, age, coat_color)
        self.drool_level = drool_level

    def snore(self):
        print(f"{self.name} the Bulldog is snoring loudly.")

    def eat_snacks(self):
        print(f"{self.name} loves to eat tasty snacks.")

chihuahua = Chihuahua("Leo", 2, "Brown", "Small")
terrier = Terrier("Max", 3, "White", "High")
bulldog = Bulldog("Rocky", 4, "Brindle", "Moderate")

chihuahua.description()
chihuahua.get_info()
chihuahua.bark()
chihuahua.play_fetch()

terrier.description()
terrier.get_info()
terrier.dig_holes()
terrier.agility_training()

bulldog.description()
bulldog.get_info()
bulldog.snore()
bulldog.eat_snacks()

